{"ast":null,"code":"var _jsxFileName = \"/home/hack/Documents/desarrollo/AAAAtrabajo-Hacking-Day/frontProyectoRetro/src/ErrorBoundary.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true\n    };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return this.props.fallback || /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Something went wrong.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 37\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["/home/hack/Documents/desarrollo/AAAAtrabajo-Hacking-Day/frontProyectoRetro/src/ErrorBoundary.js"],"names":["React","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","error","render","fallback","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAE8B,SAAxBC,wBAAwB,CAACC,KAAD,EAAQ;AACrC;AACA,WAAO;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKJ,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,aAAO,KAAKF,KAAL,CAAWM,QAAX,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA9B;AACD;;AAED,WAAO,KAAKN,KAAL,CAAWO,QAAlB;AACD;;AAlByC;;AAqB5C,eAAeV,aAAf","sourcesContent":["import React from 'react'\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return this.props.fallback || <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary\n"]},"metadata":{},"sourceType":"module"}